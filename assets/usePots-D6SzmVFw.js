import{v as u}from"./Avatar-BQonAs2_.js";import{s as i,D as c,b as d}from"./Button-DqqQBIgQ.js";import{u as l}from"./useAuth-CUq5kDrt.js";const f={async getAll(){const{data:e,error:r}=await i.from("pots").select("*"),a=e?e.sort((t,o)=>{const s=t.target/t.total,n=o.target/o.total;return s-n}):[];if(r)throw r;return a},async create(e){const{data:r,error:a}=await i.from("pots").insert(e).select().single();if(a)throw a;return r},async update(e,r){const{data:a,error:t}=await i.from("pots").update(r).eq("id",e).select().single();if(t)throw t;return a},async delete(e){const{error:r}=await i.from("pots").delete().eq("id",e);if(r)throw r}};function S(){const{user:e,isDemoMode:r,demoOverrides:a}=l();return u({queryKey:["pots",e==null?void 0:e.id],staleTime:300*1e3,queryFn:async()=>{let t;if(r)if(a.pots)t=a.pots;else try{const{data:o,error:s}=await i.from("pots").select("*").eq("user_id",c).order("created_at",{ascending:!0});if(s)throw s;o&&o.length>0?t=o:t=d.map((n,p)=>({...n,id:p+1,user_id:c,created_at:new Date().toISOString(),updated_at:new Date().toISOString()}))}catch(o){console.warn("Failed to fetch demo pots from DB, using fallback",o),t=d.map((s,n)=>({...s,id:n+1,user_id:c,created_at:new Date().toISOString(),updated_at:new Date().toISOString()}))}else t=await f.getAll();return{pots:t,usedColors:t.map(o=>o.theme)}}})}export{f as p,S as u};
