import{v as c}from"./Avatar-DdgJk9fH.js";import{s as a,b as u,D as p}from"./Button-DqqQBIgQ.js";import{u as d}from"./useAuth-CUq5kDrt.js";const l={async getAll(){const{data:t,error:e}=await a.from("pots").select("*"),s=t?t.sort((r,o)=>{const n=r.target/r.total,i=o.target/o.total;return n-i}):[];if(e)throw e;return s},async create(t){const{data:e,error:s}=await a.from("pots").insert(t).select().single();if(s)throw s;return e},async update(t,e){const{data:s,error:r}=await a.from("pots").update(e).eq("id",t).select().single();if(r)throw r;return s},async delete(t){const{error:e}=await a.from("pots").delete().eq("id",t);if(e)throw e}};function y(){const{user:t,isDemoMode:e,demoOverrides:s}=d();return c({queryKey:["pots",t==null?void 0:t.id],staleTime:300*1e3,queryFn:async()=>{let r;return e?s.pots?r=structuredClone(s.pots):r=u.map((o,n)=>({...o,id:n+1,user_id:p,created_at:new Date().toISOString(),updated_at:new Date().toISOString()})):r=await l.getAll(),{pots:r,usedColors:r.map(o=>o.theme)}}})}export{l as p,y as u};
